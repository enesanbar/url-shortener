---
version: '3.6'

services:
  # shortener:
  #   container_name: url-shortener
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   environment:
  #     - DEPLOY_TYPE=dev
  #     - DATASOURCES_MONGO_DEFAULT_HOST=mongo:27017
  #   ports:
  #     - "9090:9090"
  #     - "9092:9092"
  #   depends_on:
  #     - mongo
  #   networks:
  #     - monitoring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: message-broker
    hostname: message-broker
    ports:
      - 5672:5672   # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    volumes:
      - ${HOME}/dev-rabbitmq/data/:/var/lib/rabbitmq
      - ${HOME}/dev-rabbitmq/log/:/var/log/rabbitmq
      - ${PWD}/etc/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: always

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"
      - "14250:14250"
      - "4318:4318"

  # otel-collector:
  #   image: otel/opentelemetry-collector-contrib:0.93.0
  #   volumes:
  #     - ./etc/otel-collector.yaml:/etc/otel-collector-config.yaml
  #   command: ["--config=/etc/otel-collector-config.yaml"]
  #   ports:
  #     - "4318:4318"

  nginx:
    container_name: nginx
    build:
      dockerfile: deployment/nginx/docker/Dockerfile
      context: .
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      - DEPLOY_ENV=docker
    networks:
      - monitoring

  mongo:
    image: mongo:8.0
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
      ME_CONFIG_BASICAUTH: false

networks:
  monitoring:
